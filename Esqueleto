package pixelArt;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Canvas;
import java.awt.Frame;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;

public class esqueleto {
    static int width = 800;
    static int height = 800;
    
    static Color gris = new Color(142,147,151,255);
    static Color blanco = new Color(229,235,244,255);
    static Color cuerpo = new Color(248,193,146,255);
    static Color darkOrange = new Color(212,60,54);
    static Color softOrange = new Color(252,109,3);
    
    static Graphics2D g;

    static BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
   
    private final static int PIXEL_SIZE = 40;
    
    
    public static void paint() {
    	
    
    	drawBackground(PIXEL_SIZE, Color.white);  
    	
    	fillRect(6, 6, 2, 2, gris);
    	putPixel(8,6,blanco);
    	putPixel(8,7,gris);
    	putPixel(9,7,blanco);
    	putPixel(9,6,gris);
    	fillRect(9, 6, 3, 1, gris);
    	fillRect(12, 6,2, 1, blanco);
    	fillRect(9, 7,4,2, blanco);
    	fillRect(13, 7, 1, 3, gris);
    	putPixel(12,9,gris);
    	fillRect(7, 9,5,1, blanco);
    	fillRect(7, 8,2,1, blanco);
    	fillRect(6, 8, 1, 2, gris);
    	fillRect(6, 10,1,3, blanco);
    	fillRect(7,11,2,1, blanco);
    	fillRect(9, 10,2,1, blanco);
    	putPixel(13,10,blanco);
    	fillRect(7, 11,2,1, blanco);
    	putPixel(11,11,blanco);
    	fillRect(9, 11 ,2,1, gris);
    	fillRect(9, 11 ,2,1, gris);
    	fillRect(12, 11 ,2,1, gris);
    	putPixel(6,12,blanco);
    	putPixel(13,12,blanco);
    	fillRect(6, 13 ,8,1, gris);
    	
    	fillRect(7, 10 ,2,1, Color.black);
    	fillRect(11,10,2,1, Color.black);
    	fillRect(7, 12 ,6,1, Color.black);
    	
      // fillRect(1, 9, 13, 6, Color.black);
      
       
      
      
      //  drawVerticalLine(7,8,3,softOrange);
       
     
      //  putPixel(9,7,darkBlue);
        
      //  putPixel(12,10,softOrange);
      //  putPixel(7,8,softOrange);
       drawSquareGrid(PIXEL_SIZE, Color.black);
    	
        // Guardamos la imagen en formato JPG
    	
    	
        try {       
            ImageIO.write(image, "jpg", new File("esqueletoMinecraft.jpg"));
            System.out.println("EXITO !!!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private static void drawVerticalLine(int a, int b, int x, Color c){
    	for(int i=a;i<=b;i++){
     	   g.setColor(c);
           g.fillRect(x * PIXEL_SIZE, i * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
        }
    }
    
    private static void drawHorizontalLine(int a, int b, int y, Color c){
        for(int i=a;i<=b;i++){
     	   g.setColor(c);
           g.fillRect(i * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
        }
    }
    
    private static void putPixel(int x, int y, Color c){       
	   g.setColor(c);
	   g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);    
    }
    
    private static void fillRect(int x, int y, int width, int height, Color c){
    	g.setColor(c);
    	g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, width*PIXEL_SIZE, height*PIXEL_SIZE);
    }
    
    private static void drawSquareGrid(int size, Color c) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {                
                g.setColor(c);
                g.drawRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            }
        }
    }
    private static void drawBackground(int size, Color c) {
    	for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                g.setColor(c);
                g.fillRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);                
            }
        }
    }
    
    
    public static void main(String[] args) {
        g = image.createGraphics();        
        paint();
    }
}
